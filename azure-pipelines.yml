trigger:
  - master  # Trigger the pipeline when changes are pushed to the 'master' branch

resources:
  - repo: self  # Use the current repository as a resource

stages:
  - stage: Build  # Define a stage named 'Build'
    jobs:
      - job: BuildImage  # Define a job named 'BuildImage'
        pool:
          vmImage: 'ubuntu-latest'  # Use an Ubuntu-based agent for the job
        steps:
          - task: Docker@2  # Use the Docker task
            inputs:
              command: build  # Build a Docker image
              repository: myctnreg5300/flask-app  # Specify the repository for the image
              dockerfile: '**/Dockerfile'  # Path to the Dockerfile
              tags:
                - latest
          - task: PublishBuildArtifacts@1  # Publish the k8s directory as an artifact
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/k8s'
              ArtifactName: 'k8s'
              publishLocation: 'Container'
          - script: ls -la $(Build.SourcesDirectory)/k8s/  # List files in the 'k8s' directory
            displayName: 'List files in k8s directory'

  - stage: Deploy  # Define a stage named 'Deploy'
    dependsOn: Build  # Depend on 'Build' stage
    condition: succeeded('Build')  # Run only if 'Build' succeeded
    jobs:
      - deployment: DeployToK8s  # Define a deployment job
        environment: 'MyAksCluster'  # Target environment
        pool:
          vmImage: 'ubuntu-latest'  # Use an Ubuntu-based agent
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@0  # Download the k8s directory artifact
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'k8s'
                    downloadPath: '$(System.ArtifactsDirectory)'
                - task: Kubernetes@1  # Use the Kubernetes task
                  inputs:
                    connectionType: 'Azure Resource Manager'
                    azureSubscriptionEndpoint: 'DevOpsConnectionToAzurePortal'
                    azureResourceGroup: 'MyAksResGrp'
                    kubernetesCluster: 'MyAksCluster'
                    command: apply
                    arguments: '-f $(System.ArtifactsDirectory)/k8s/deployment.yml'  # Correct path to the deployment file
